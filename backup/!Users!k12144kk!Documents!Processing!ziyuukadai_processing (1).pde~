import processing.gainer.*;
import processing.serial.*;
Serial myPort;
Gainer gainer;
PFont myFont;

int StatusFlag;

int state;//タクトスイッチの押す組み合わせ
int Button1, Button2, Button3, Button4;//タクトスイッチ
int countOctave;

boolean input1, input2, input3, input4;

String[] str = {
  "ド", "レ", "ミ", "ファ", " ソ", " ラ", " シ", " ド"
};

void setup() {
  size(600, 200);
  myFont=loadFont("TimesNewRomanPSMT-90.vlw");
  textFont(myFont, 30);
  gainer=new Gainer(this);

  StatusFlag=0;
  myPort=new Serial(this, "/dev/cu.usbserial-14P50078", 9600);//ポートとスピードを設定して、Serialクラスを初期化

  //初期化
  state=0;//スイッチの組み合わせ状態を保持
  countOctave=0;//オクターブ情報を保持
  Button1=0;//タクトスイッチのポート番号
  Button2=1;
  Button3=2;
  Button4=3;
}


//距離センサメソッド
//センサが感知したら1,感知しなかったら-1を返す
int Distance(int analogValue) {
  if (analogValue>=100) {
    return(1);
  }
  else {
    return(-1);
  }
}


//タクトスイッチメソッド
//タクトスイッチを押した組み合わせを戻り値として返す
//true=HIGH,false=LOW
void Button() {
  if ((input1==false)&&(input2==false)&&(input3==false)&&(input4==false)) {
    state=0;
  }
  else if ((input1==true)&&(input2==false)&&(input3==false)&&(input4==false)) {
    state=1;
  }
  else  if ((input1==false)&&(input2==true)&&(input3==false)&&(input4==false)) {
    state=2;
  }
  else if ((input1==false)&&(input2==false)&&(input3==true)&&(input4==false)) {
    state=3;
  }
  else  if ((input1==false)&&(input2==false)&&(input3==false)&&(input4==true)) {
    state=4;
  }
  else  if ((input1==true)&&(input2==true)&&(input3==false)&&(input4==false)) {
    state=5;
  }
  else if ((input1==true)&&(input2==false)&&(input3==true)&&(input4==false)) {
    state=6;
  }
  else  if ((input1==true)&&(input2==false)&&(input3==false)&&(input4==true)) {
    state=7;
  }
  else  if ((input1==true)&&(input2==true)&&(input3==true)&&(input4==false)) {
    state=8;
  }
  else  if ((input1==true)&&(input2==true)&&(input3==true)&&(input4==true)) {
    state=20;
  }
  else  if ((input1==false)&&(input2==true)&&(input3==true)&&(input4==false)) {
    state=30;
  }
  else  if ((input1==false)&&(input2==false)&&(input3==true)&&(input4==true)) {
    state=40;
  }
  else {
  }
}


void TextOctave() {
  //文字のサイズ
  textSize(18);
  //文字の位置設定を中央指定にする
  textAlign(LEFT);
  //色の指定
  fill(#2EFF67);
  //文字を中央指定でhelloを描く
  text("オクターブ: "+countOctave, 10, 20);
}

void doremi(int num) {
  //文字のサイズ
  textSize(30);
  for (int i=0;i<8;i++) {
    if (num == i) {
      fill(#FF0000);
      text(str[i], i*70, 100);
      fill(255);
    }
    else {
      fill(255);
      text(str[i], i*70, 100);
    }
  }
}

void draw() {
  background(120);
  gainer.peekAnalogInput();
  gainer.beginDigitalInput();

  int distance=gainer.analogInput[0];//距離センサの値を取得
  input1=gainer.digitalInput[0];//タクトスイッチの値を取得
  input2=gainer.digitalInput[1];
  input3=gainer.digitalInput[2];
  input4=gainer.digitalInput[3];


  Button();//ボタンの組み合わせをstateに格納

  if (Distance(distance)==1) {
    if (state!=20&&state!=30&&state!=40) {  
      myPort.write(state); //myportにボタンの組み合わせを書き込み
      delay(100);
    }
  }
  else {
    if (state==20||state==30||state==40) {  
      myPort.write(state); //myportにボタンの組み合わせを書き込み
      if (state==20) {
        countOctave=0;
      }
      else if (state==30) {        
        countOctave++;
      }
      else {      
        countOctave--;
      }
      delay(300);
    }
    state=0;
  }

  doremi(state-1);
  TextOctave();
}

