import java.io.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class Enshyu4 extends JFrame{
	
	private JPanel pn;
	private JLabel lb;
	private JTextArea ta;
	private JScrollPane sp;
	//private JButton bt1,bt2;
	private JMenuBar mb;
	private JMenu mn,mn1,mn2;

	//private JMenuItem[] mi1 = new JMenuItem[2];

	private JMenuItem[] mi = new JMenuItem[6];
	private JCheckBoxMenuItem jc;

	public static void main(String[] args){
		Enshyu4 sm = new Enshyu4();
	}
	
	public Enshyu4(){
		//タイトルの設定
		super("演習4");
		
		//コンポーネントの作成
		lb = new JLabel("ファイルを選択してください");
		ta = new JTextArea(25,25);
		sp = new JScrollPane(ta);
		mb = new JMenuBar();
		
		mn = new JMenu("ファイル");
		mn1 = new JMenu("機能");
		mn2 = new JMenu("編集");
		
		mi[0] = new JMenuItem("読み込み"); 
		mi[1] = new JMenuItem("保存"); 
		mi[2] = new JMenuItem("終了"); 
		
		mi[3] = new JMenuItem("コピー");
		mi[4] = new JMenuItem("カット");
		mi[5] = new JMenuItem("ペースト");

		jc = new JCheckBoxMenuItem("折り返し");

		//mi1[0] = new JMenuItem("行数カウント");
		//mi1[1] = new JMenuItem("文字数カウント");
		
		for(int i=0;i<3;i++){
			mn.add(mi[i]);
		}

		mn1.add(jc);
		//mn1.add(mi1[0]);
		//mn1.add(mi1[1]);

		for (int i=3;i<mi.length;i++){
		mn2.add(mi[i]);
		}

		mb.add(mn);
		mb.add(mn1);
		mb.add(mn2);

		add(lb,BorderLayout.SOUTH);
		add(sp,BorderLayout.CENTER);
		add(mb,BorderLayout.NORTH);

		//リスナの登録(割り込み処理)
		for (int i=0;i<mi.length;i++){
		mi[i].addActionListener(new SamopleActionListener());
		}
		jc.addActionListener(new SamopleActionListener());
		//mi1[0].addActionListener(new SamopleActionListener());
		//mi1[1].addActionListener(new SamopleActionListener());

		addWindowListener(new SampleWindowListener());

		//フレーム設定
		setSize(300,300);
		setVisible(true);
	}
	class SamopleActionListener implements ActionListener{
		public void actionPerformed(ActionEvent e){
			Container cnt = getContentPane();
			JFileChooser fc = new JFileChooser();
			try {
				if(e.getSource() == mi[0]){
					int res = fc.showOpenDialog(cnt);
					if(res == JFileChooser.APPROVE_OPTION){
						File fl = fc.getSelectedFile();
						BufferedReader br = new BufferedReader(new FileReader(fl));
						ta.read(br,null);
						br.close();
					}
					
				}else if(e.getSource() == mi[1]){
					int res = fc.showSaveDialog(cnt);
					if (res == JFileChooser.APPROVE_OPTION){
						File fl = fc.getSelectedFile();
						BufferedWriter bw = new BufferedWriter(new FileWriter(fl));
						ta.write(bw);
						bw.close();
					}
				}else if(e.getSource() == mi[2]){
					int res = JOptionPane.showConfirmDialog (cnt, "プログラムを終了しますか？", "確認", JOptionPane.YES_NO_OPTION);
					
					if(res == JOptionPane.YES_OPTION) {
						System.exit(0);
					}
				}
				else if(e.getSource() == jc){
					ta.setLineWrap(jc.getState());
				}else if(e.getSource() == mi[3]){
					ta.copy();
				}else if(e.getSource() == mi[4]){
					ta.cut();
				}else if(e.getSource() == mi[5]){
					ta.paste();
				}
			}catch (Exception ex){
				ex.printStackTrace();
			}
		}
	}

	class SampleWindowListener extends WindowAdapter{
		public void windowClosing(WindowEvent e){
			System.exit(0);
		}
	}
}

